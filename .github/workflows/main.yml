# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
          # Выбираем контейнер с необходимыми Rust компонентами
os: Visual Studio 2015

# Устанавливаем Rust
install:
  # Скачиваем rustup
  - appveyor DownloadFile https://win.rustup.rs/ -FileName rustup-init.exe
  # Устанавливаем стабильный Rust с MSVC ABI
  # Если хотите другую версию - замените stable на версию
  # Если хотите GNU ABI - замените x86_64-pc-windows-msvc на x86_64-pc-windows-gnu
  - rustup-init -yv --default-toolchain stable --default-host x86_64-pc-windows-msvc
  # Устанавливаем пути до компонентов Rust
  - set PATH=%PATH%;%USERPROFILE%\.cargo\bin
  # Выводим версии
  - rustc -vV
  - cargo -vV

# Выключаем стандартный сборщик AppVeyor
build: true

# Используем специальный тестовый скрипт
test_script:
  # Собираем
  - cargo build --verbose
  # Запускаем тесты
  - cargo test --verbose
